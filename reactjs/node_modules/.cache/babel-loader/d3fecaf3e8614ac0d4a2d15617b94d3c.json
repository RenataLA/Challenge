{"ast":null,"code":"import _defineProperty from \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/src/Turing/PersonalityInsights/PersonalityInsights.js\";\nimport React, { Component, lazy, Suspense } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Link } from 'react-router-dom';\nimport Popup from \"reactjs-popup\";\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\n\nvar PersonalityInsights =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PersonalityInsights, _Component);\n\n  function PersonalityInsights(props) {\n    var _this;\n\n    _classCallCheck(this, PersonalityInsights);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PersonalityInsights).call(this, props));\n\n    _this.clearFields = function () {\n      _this.setState({\n        filtercod: '',\n        filtercpf: '',\n        filteremail: '',\n        sqlquery: '',\n        response: '',\n        post: '',\n        responseToPost: ''\n      });\n    };\n\n    _this.performSearch = function () {\n      fetch('api/selectCandidato?table=CANDIDATO&cod=' + _this.state.filtercod + '&cpf=' + _this.state.filtercpf + '&email=' + _this.state.filteremail).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        var aux = [];\n        res.recordset.forEach(function (e) {\n          aux.push(e);\n        });\n\n        _this.setState({\n          usersData: aux\n        });\n\n        _this.renderTableData();\n      }).catch(function (err) {\n        _this.openPopup(\"Erro ao filtrar candidatos. \" + err);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.onRadioBtnClick = _this.onRadioBtnClick.bind(_assertThisInitialized(_this));\n    _this.openPopup = _this.openPopup.bind(_assertThisInitialized(_this));\n    _this.closePopup = _this.closePopup.bind(_assertThisInitialized(_this));\n    _this.state = {\n      filtercod: '%',\n      filtercpf: '',\n      filteremail: '',\n      usersData: [],\n      popup: {\n        open: false,\n        message: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(PersonalityInsights, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.performSearch();\n      this.setState({\n        filtercod: ''\n      });\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      return this.state.usersData.map(function (usersData, index) {\n        var cod_candidato = usersData.cod_candidato,\n            nome = usersData.nome,\n            sobrenome = usersData.sobrenome,\n            email = usersData.email,\n            endereco = usersData.endereco;\n        var userLink = \"/perfil/\".concat(cod_candidato);\n        return React.createElement(\"tr\", {\n          key: cod_candidato,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: userLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, cod_candidato)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: userLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, nome, \"\\xA0\", sobrenome)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: userLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"onRadioBtnClick\",\n    value: function onRadioBtnClick(radioSelected) {\n      this.setState({\n        sex: radioSelected.target.value\n      });\n    }\n  }, {\n    key: \"openPopup\",\n    value: function openPopup(message) {\n      this.setState({\n        popup: {\n          open: true,\n          message: message\n        }\n      });\n    }\n  }, {\n    key: \"closePopup\",\n    value: function closePopup() {\n      this.setState({\n        popup: {\n          open: false,\n          message: ''\n        }\n      });\n    } // render() {\n    //   return (\n    //     <div className=\"animated fadeIn\">\n    //       <Row>\n    //         <Col xs=\"12\" md=\"12\">\n    //           <Card>\n    //             <CardHeader>\n    //               <strong>Filtrar Usuários</strong>\n    //             </CardHeader>\n    //             <CardBody>\n    //               <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n    //                 <FormGroup row>\n    //                 <Col md=\"4\">\n    //                     <InputGroup>\n    //                       <InputGroupAddon addonType=\"prepend\">\n    //                         <InputGroupText>\n    //                           <i className=\"fa fa-user\"></i>\n    //                         </InputGroupText>\n    //                       </InputGroupAddon>\n    //                       <Input \n    //                         type=\"text\" \n    //                         id=\"filtercod\" \n    //                         name=\"filtercod\" \n    //                         placeholder=\"Código\"\n    //                         value={this.state.filtercod}\n    //                         onChange={this.handleChange}\n    //                       />\n    //                     </InputGroup>\n    //                   </Col>\n    //                   <Col md=\"4\">\n    //                     <InputGroup>\n    //                       <InputGroupAddon addonType=\"prepend\">\n    //                         <InputGroupText>\n    //                           <i className=\"fa fa-user\"></i>\n    //                         </InputGroupText>\n    //                       </InputGroupAddon>\n    //                       <Input \n    //                         type=\"text\" \n    //                         id=\"filtercpf\" \n    //                         name=\"filtercpf\" \n    //                         placeholder=\"CPF\" \n    //                         value={this.state.filtercpf}\n    //                         onChange={this.handleChange}\n    //                       />\n    //                     </InputGroup>\n    //                   </Col>\n    //                   <Col md=\"4\">\n    //                     <InputGroup>\n    //                       <InputGroupAddon addonType=\"prepend\">\n    //                         <InputGroupText>\n    //                           <i className=\"fa fa-envelope-o\"></i>\n    //                         </InputGroupText>\n    //                       </InputGroupAddon>\n    //                       <Input \n    //                         type=\"text\" \n    //                         id=\"filteremail\" \n    //                         name=\"filteremail\" \n    //                         placeholder=\"E-Mail\" \n    //                         value={this.state.filteremail}\n    //                         onChange={this.handleChange}\n    //                       />\n    //                     </InputGroup>\n    //                   </Col>\n    //                 </FormGroup>\n    //               </Form>\n    //             </CardBody>\n    //             <CardFooter>\n    //               <Button type=\"submit\" size=\"sm\" color=\"success\" onClick={this.performSearch}><i className=\"fa fa-dot-circle-o\"></i> Buscar</Button>\n    //               <Label>&nbsp;</Label>\n    //               <Button type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.clearFields}><i className=\"fa fa-ban\"></i> Limpar</Button>\n    //             </CardFooter>\n    //           </Card>\n    //         </Col>\n    //         </Row>\n    //         <Popup open={this.state.popup.open} closeOnDocumentClick onClose={this.closePopup}>\n    //              <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '100%' }}>\n    //                 <CardBody className=\"text-center\">\n    //                   <div>\n    //                     <h2>{this.state.popup.message}</h2>\n    //                     {/* <Link to=\"/dashboard\">\n    //                       <Button color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Menu</Button>\n    //                     </Link> */}\n    //                   </div>\n    //                 </CardBody>\n    //               </Card>\n    //              </Popup>\n    //       {/* Lista de Usuários */}\n    //         <Row>\n    //         <Col xl={12}>\n    //             <Card>\n    //               <CardHeader>\n    //                 <i className=\"fa fa-align-justify\"></i> Usuários <small className=\"text-muted\"></small>\n    //               </CardHeader>\n    //               <CardBody>\n    //                 <Table responsive hover>\n    //                   <thead>\n    //                     <tr>\n    //                       <th scope=\"col\">Cód.</th>\n    //                       <th scope=\"col\">Nome</th>\n    //                       <th scope=\"col\">Email</th>\n    //                       <th scope=\"col\">Status</th>\n    //                     </tr>\n    //                   </thead>\n    //                   <tbody>\n    //                     {/* {userList.map((user, index) =>\n    //                       <UserRow key={index} user={user}/>\n    //                     )} */}\n    //                     {this.renderTableData()}\n    //                   </tbody>\n    //                 </Table>\n    //                 <Pagination className=\"center\">\n    //                 <PaginationItem disabled><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n    //                 <PaginationItem active>\n    //                   <PaginationLink tag=\"button\">1</PaginationLink>\n    //                 </PaginationItem>\n    //                 <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n    //                 <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n    //                 <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n    //                 <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n    //               </Pagination>\n    //               </CardBody>\n    //             </Card>\n    //           </Col>\n    //         </Row>\n    //     </div>\n    //   );\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PersonalityInsights;\n}(Component);\n\nexport default PersonalityInsights;","map":{"version":3,"sources":["/home/rafamaia/Desktop/Projetos/FIAP/Challenge/FIAP-Challenge/app/src/Turing/PersonalityInsights/PersonalityInsights.js"],"names":["React","Component","lazy","Suspense","Bar","Line","Link","Popup","Button","Card","CardBody","CardFooter","CardHeader","Col","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Label","Pagination","PaginationItem","PaginationLink","Row","Table","PersonalityInsights","props","clearFields","setState","filtercod","filtercpf","filteremail","sqlquery","response","post","responseToPost","performSearch","fetch","state","then","res","json","aux","recordset","forEach","e","push","usersData","renderTableData","catch","err","openPopup","handleChange","event","target","id","value","onRadioBtnClick","bind","closePopup","popup","open","message","map","index","cod_candidato","nome","sobrenome","email","endereco","userLink","radioSelected","sex"],"mappings":"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IAAD;AAAM,UAAA,EAAE,EAAEK,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBL,aAArB,CAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAEK,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBJ,IAArB,UAAiCC,SAAjC,CAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,KAAL,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAEE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ,CAJF,CADF;AAQD,OAXM,CAAP;AAYC;;;oCAQaC,a,EAAe;AAC7B,WAAK3C,QAAL,CAAc;AACZ4C,QAAAA,GAAG,EAAED,aAAa,CAACjB,MAAd,CAAqBE;AADd,OAAd;AAGD;;;8BAESM,O,EAAQ;AAChB,WAAKlC,QAAL,CAAc;AACZgC,QAAAA,KAAK,EAAG;AACNC,UAAAA,IAAI,EAAG,IADD;AAENC,UAAAA,OAAO,EAAGA;AAFJ;AADI,OAAd;AAMD;;;iCAEW;AACV,WAAKlC,QAAL,CAAc;AACZgC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAG,KADF;AAELC,UAAAA,OAAO,EAAE;AAFJ;AADK,OAAd;AAMD,K,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BACS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAvO+B9D,S;;AAyOlC,eAAeyB,mBAAf","sourcesContent":["import React, { Component, lazy, Suspense } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Link } from 'react-router-dom';\nimport Popup from \"reactjs-popup\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Label,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Row,\n  Table,\n} from 'reactstrap';\n\n\nclass PersonalityInsights extends Component {\n  constructor(props) {\n    super(props);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n    this.openPopup = this.openPopup.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.state = {\n      filtercod:'%',\n      filtercpf:'',\n      filteremail:'',\n      usersData: [],\n      popup: {\n        open : false,\n        message : ''\n      },\n    };\n  }\n\n  componentDidMount(){\n    this.performSearch();\n    this.setState({\n      filtercod: ''\n    });\n  }\n\n  clearFields = () => {\n    this.setState({\n      filtercod:'',\n      filtercpf:'',\n      filteremail:'',\n      sqlquery:'',\n      response:'',\n      post:'',\n      responseToPost:''\n    });\n  }\n\n  performSearch = () => {\n      fetch('api/selectCandidato?table=CANDIDATO&cod='+this.state.filtercod +'&cpf='+this.state.filtercpf+'&email='+this.state.filteremail)\n      .then(res => res.json())\n      .then(res => {\n        var aux = [];\n        res.recordset.forEach(e => {\n          aux.push(e);\n        });\n        this.setState({\n          usersData : aux\n        })\n        this.renderTableData();\n\n      })\n      .catch(err => {\n        this.openPopup(\"Erro ao filtrar candidatos. \" + err);\n      });\n  }\n\n  renderTableData(){\n    return this.state.usersData.map((usersData, index) => {\n      const {cod_candidato, nome, sobrenome, email, endereco } = usersData;\n      const userLink = `/perfil/${cod_candidato}`\n      return (\n        <tr key={cod_candidato}>\n          <th scope=\"row\"><Link to={userLink}>{cod_candidato}</Link></th>\n          <td><Link to={userLink}>{nome}&nbsp;{sobrenome}</Link></td>\n          <td>{email}</td>\n          <td><Link to={userLink}></Link></td>\n        </tr>\n      )\n    });\n    }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      sex: radioSelected.target.value,\n    }); \n  }\n\n  openPopup(message){\n    this.setState({\n      popup : {\n        open : true,\n        message : message\n      }\n    });\n  }\n\n  closePopup(){\n    this.setState({\n      popup: {\n        open : false,\n        message: ''\n      }\n    });\n  }\n\n\n  // render() {\n  //   return (\n  //     <div className=\"animated fadeIn\">\n  //       <Row>\n  //         <Col xs=\"12\" md=\"12\">\n  //           <Card>\n  //             <CardHeader>\n  //               <strong>Filtrar Usuários</strong>\n  //             </CardHeader>\n  //             <CardBody>\n  //               <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n  //                 <FormGroup row>\n  //                 <Col md=\"4\">\n  //                     <InputGroup>\n  //                       <InputGroupAddon addonType=\"prepend\">\n  //                         <InputGroupText>\n  //                           <i className=\"fa fa-user\"></i>\n  //                         </InputGroupText>\n  //                       </InputGroupAddon>\n  //                       <Input \n  //                         type=\"text\" \n  //                         id=\"filtercod\" \n  //                         name=\"filtercod\" \n  //                         placeholder=\"Código\"\n  //                         value={this.state.filtercod}\n  //                         onChange={this.handleChange}\n  //                       />\n  //                     </InputGroup>\n  //                   </Col>\n  //                   <Col md=\"4\">\n  //                     <InputGroup>\n  //                       <InputGroupAddon addonType=\"prepend\">\n  //                         <InputGroupText>\n  //                           <i className=\"fa fa-user\"></i>\n  //                         </InputGroupText>\n  //                       </InputGroupAddon>\n  //                       <Input \n  //                         type=\"text\" \n  //                         id=\"filtercpf\" \n  //                         name=\"filtercpf\" \n  //                         placeholder=\"CPF\" \n  //                         value={this.state.filtercpf}\n  //                         onChange={this.handleChange}\n  //                       />\n  //                     </InputGroup>\n  //                   </Col>\n  //                   <Col md=\"4\">\n  //                     <InputGroup>\n  //                       <InputGroupAddon addonType=\"prepend\">\n  //                         <InputGroupText>\n  //                           <i className=\"fa fa-envelope-o\"></i>\n  //                         </InputGroupText>\n  //                       </InputGroupAddon>\n  //                       <Input \n  //                         type=\"text\" \n  //                         id=\"filteremail\" \n  //                         name=\"filteremail\" \n  //                         placeholder=\"E-Mail\" \n  //                         value={this.state.filteremail}\n  //                         onChange={this.handleChange}\n  //                       />\n  //                     </InputGroup>\n  //                   </Col>\n  //                 </FormGroup>\n  //               </Form>\n  //             </CardBody>\n  //             <CardFooter>\n  //               <Button type=\"submit\" size=\"sm\" color=\"success\" onClick={this.performSearch}><i className=\"fa fa-dot-circle-o\"></i> Buscar</Button>\n  //               <Label>&nbsp;</Label>\n  //               <Button type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.clearFields}><i className=\"fa fa-ban\"></i> Limpar</Button>\n  //             </CardFooter>\n  //           </Card>\n  //         </Col>\n  //         </Row>\n  //         <Popup open={this.state.popup.open} closeOnDocumentClick onClose={this.closePopup}>\n  //              <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '100%' }}>\n  //                 <CardBody className=\"text-center\">\n  //                   <div>\n  //                     <h2>{this.state.popup.message}</h2>\n  //                     {/* <Link to=\"/dashboard\">\n  //                       <Button color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Menu</Button>\n  //                     </Link> */}\n  //                   </div>\n  //                 </CardBody>\n  //               </Card>\n  //              </Popup>\n  //       {/* Lista de Usuários */}\n  //         <Row>\n  //         <Col xl={12}>\n  //             <Card>\n  //               <CardHeader>\n  //                 <i className=\"fa fa-align-justify\"></i> Usuários <small className=\"text-muted\"></small>\n  //               </CardHeader>\n  //               <CardBody>\n  //                 <Table responsive hover>\n  //                   <thead>\n  //                     <tr>\n  //                       <th scope=\"col\">Cód.</th>\n  //                       <th scope=\"col\">Nome</th>\n  //                       <th scope=\"col\">Email</th>\n  //                       <th scope=\"col\">Status</th>\n  //                     </tr>\n  //                   </thead>\n  //                   <tbody>\n  //                     {/* {userList.map((user, index) =>\n  //                       <UserRow key={index} user={user}/>\n  //                     )} */}\n  //                     {this.renderTableData()}\n  //                   </tbody>\n  //                 </Table>\n  //                 <Pagination className=\"center\">\n  //                 <PaginationItem disabled><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n  //                 <PaginationItem active>\n  //                   <PaginationLink tag=\"button\">1</PaginationLink>\n  //                 </PaginationItem>\n  //                 <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n  //                 <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n  //                 <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n  //                 <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n  //               </Pagination>\n  //               </CardBody>\n  //             </Card>\n  //           </Col>\n  //         </Row>\n  //     </div>\n  //   );\n  // }\n  render() {\n    return(<div></div>)\n  }\n}\nexport default PersonalityInsights;\n"]},"metadata":{},"sourceType":"module"}